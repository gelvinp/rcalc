# Track 0
 - Matrix datatype
 - Matrix operators
    - add, sub, (scalar) mul, (scalar)div, tpose, (vec)mul, (mat)mul
    - det (determinate)
    - transmat (Vec2 -> mat2 translation matrix, vec3 vec4 same)
    - scalemat (Vec2 -> mat2 scale matrix, vec3 vec4 same)
    - rotmat (scalar -> mat2 rotation matrix, vec3 -> mat3 rotation matrix)
    - Construct from vectors
    - Column and row accessors

# Track 1
 - Add sqlite module (enabled by platforms, have a built in preferences system) (maybe?)
 - Create options controller, platform integration with data directory, save/load interface
 - Create lib target
 - Create TUI renderer

# Track 2
 - Refactor CommandMap generator
    - Inherit improvements from OperatorMap
 - Improve help page for imgui renderer

# Track 3
 - Add a "Units" datatype (base unit type (length, weight, etc...), to_base, from_base)
   - Each base unit type has a specific backing datatype (Real, Vec3, etc...)
 - Add a UnitsMap generator, learning from Track 2
 - Add a `convert` command, takes 1 real_cast or vec and two unit types, makes sure base unit types are the same, and backing datatype matches, then convert through base.
 - Convert existing "conversion" functions to new Units method, and add new Unit types
 - Expose base unit types and all units, to help page